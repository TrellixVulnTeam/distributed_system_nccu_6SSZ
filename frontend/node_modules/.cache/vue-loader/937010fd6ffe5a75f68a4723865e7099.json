{"remainingRequest":"C:\\Users\\Graham\\Desktop\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Graham\\Desktop\\frontend\\src\\components\\common\\ButtonRow.vue?vue&type=style&index=0&id=51418c14&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\Graham\\Desktop\\frontend\\src\\components\\common\\ButtonRow.vue","mtime":1620097894000},{"path":"C:\\Users\\Graham\\Desktop\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1621157949320},{"path":"C:\\Users\\Graham\\Desktop\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1621157949579},{"path":"C:\\Users\\Graham\\Desktop\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1621157949545},{"path":"C:\\Users\\Graham\\Desktop\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1621157957964},{"path":"C:\\Users\\Graham\\Desktop\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621157932554},{"path":"C:\\Users\\Graham\\Desktop\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1621157949579}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZm9jdXMgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMzYTg4NWYgIWltcG9ydGFudDsNCn0NCg=="},{"version":3,"sources":["ButtonRow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA","file":"ButtonRow.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\r\n    <v-row>\r\n        <v-col v-for=\"btnInfo in btnInfos\">\r\n            <custom-button\r\n                :class=\"{ focus: btnInfo.level === focusBtn }\"\r\n                :text=\"btnInfo.text\"\r\n                width=\"100%\"\r\n                @click=\"onClick(btnInfo.level)\"\r\n            ></custom-button>\r\n        </v-col>\r\n    </v-row>\r\n</template>\r\n\r\n<script>\r\nimport CustomButton from './CustomButton';\r\nexport default {\r\n    name: 'ButtonRow',\r\n    components: { CustomButton },\r\n    data() {\r\n        return {\r\n            focusBtn: '',\r\n        };\r\n    },\r\n    props: {\r\n        btnInfos: Array,\r\n        currentBtn: String,\r\n    },\r\n    methods: {\r\n        onClick(level) {\r\n            this.$emit('button-click', level);\r\n        },\r\n    },\r\n    watch: {\r\n        currentBtn: {\r\n            handler: function (newVal) {\r\n                this.focusBtn = newVal;\r\n            },\r\n        },\r\n    },\r\n    mounted() {\r\n        this.focusBtn = this.currentBtn;\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.focus {\r\n    background-color: #3a885f !important;\r\n}\r\n</style>\r\n"]}]}